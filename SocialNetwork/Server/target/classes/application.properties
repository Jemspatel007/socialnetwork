
#Database Properties
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
# spring.datasource.url = jdbc:mysql://localhost:3306/social_network?allowPublicKeyRetrieval=true&useSSL=false&enabledTLSProtocols=TLSv1.2&createDatabaseIfNotExist=true&serverTimezone=UTC
# spring.datasource.url=jdbc:mysql://host.docker.internal:3306/social_network?allowPublicKeyRetrieval=true&useSSL=false&enabledTLSProtocols=TLSv1.2&createDatabaseIfNotExist=true&serverTimezone=UTC
# spring.datasource.url=jdbc:mysql://socialnetwork.cbkcjn53uods.us-east-1.rds.amazonaws.com:3306/social_network?allowPublicKeyRetrieval=true&useSSL=false&enabledTLSProtocols=TLSv1.2&createDatabaseIfNotExist=true&serverTimezone=UTC
# spring.datasource.username = admin
# spring.datasource.password = admin123

spring.datasource.url=jdbc:mysql://${DB_HOST}:3306/Social_Network?allowPublicKeyRetrieval=true&useSSL=false&enabledTLSProtocols=TLSv1.2&createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}


#spring.test.database.connection = jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false

#Actuator Properties
#management.endpoints.web.exposure.include=*
#org.hibernate.dialect.MySQLDialect

#JPA Properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.properties.hibernate.format_sql=TRUE
spring.jpa.hibernate.ddl-auto=update

# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.springframework=DEBUG
spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.properties.hibernate.use_sql_comments=true
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql=TRACE

#Server Properties
server.port=8000

#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
##Enter your Cloudinary Credentials

##Cloudinary Properties
cloudinary.cloud_name=enter_your_cloud_name
cloudinary.api_key=enter_your_api_key
cloudinary.api_secret=enter_your_api_secret
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

### File Storage Properties
## All files uploaded through the REST API will be stored in this directory
#file.upload-dir=./uploads

###Logging Levels
# Disable the default loggers
#logging.level.org = WARN
#logging.level.blog = WARN

#Show SQL executed with parameter bindings
logging.level.org.hibernate.SQL = DEBUG
logging.level.org.hibernate.type.descriptor = TRACE

